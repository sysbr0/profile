{"ast":null,"code":"var _jsxFileName = \"/Users/sysbr/Desktop/prof/profile/frontend/src/components/RepositoriesList.js\",\n  _s = $RefreshSig$();\n// src/components/RepositoriesList.js\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RepositoriesList = () => {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/repositories');\n        const data = await response.json();\n        setRepositories(data);\n      } catch (error) {\n        console.error('Error fetching repositories:', error);\n      }\n    };\n    fetchRepositories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Repositories List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), repositories.map(repository => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: repository.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: repository.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Language:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }, this), \" \", repository.language]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: repository.img,\n        alt: repository.title,\n        style: {\n          width: '100px',\n          height: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, repository._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(RepositoriesList, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n_c = RepositoriesList;\nexport default RepositoriesList;\nvar _c;\n$RefreshReg$(_c, \"RepositoriesList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","RepositoriesList","_s","repositories","setRepositories","fetchRepositories","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repository","title","description","language","src","img","alt","style","width","height","_id","_c","$RefreshReg$"],"sources":["/Users/sysbr/Desktop/prof/profile/frontend/src/components/RepositoriesList.js"],"sourcesContent":["// src/components/RepositoriesList.js\n\nimport React, { useEffect, useState } from 'react';\n\nconst RepositoriesList = () => {\n  const [repositories, setRepositories] = useState([]);\n\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/repositories');\n        const data = await response.json();\n        setRepositories(data);\n      } catch (error) {\n        console.error('Error fetching repositories:', error);\n      }\n    };\n\n    fetchRepositories();\n  }, []);\n\n  return (\n    <div>\n      <h1>Repositories List</h1>\n      {repositories.map((repository) => (\n        <div key={repository._id}>\n          <h2>{repository.title}</h2>\n          <p>{repository.description}</p>\n          <p><strong>Language:</strong> {repository.language}</p>\n          <img src={repository.img} alt={repository.title} style={{ width: '100px', height: '100px' }} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RepositoriesList;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,eAAe,CAACI,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDL,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBb,YAAY,CAACc,GAAG,CAAEC,UAAU,iBAC3BlB,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAKM,UAAU,CAACC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BhB,OAAA;QAAAY,QAAA,EAAIM,UAAU,CAACE;MAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BhB,OAAA;QAAAY,QAAA,gBAAGZ,OAAA;UAAAY,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,UAAU,CAACG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDhB,OAAA;QAAKsB,GAAG,EAAEJ,UAAU,CAACK,GAAI;QAACC,GAAG,EAAEN,UAAU,CAACC,KAAM;QAACM,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE;QAAQ;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,GAJvFE,UAAU,CAACU,GAAG;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA9BID,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AAgCtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}