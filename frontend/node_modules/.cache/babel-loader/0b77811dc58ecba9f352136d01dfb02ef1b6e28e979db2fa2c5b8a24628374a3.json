{"ast":null,"code":"var _jsxFileName = \"/Users/sysbr/Desktop/prof/frontend/src/components/UsersList.js\",\n  _s = $RefreshSig$();\n// src/components/UsersList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/users');\n        setUsers(response.data);\n        setLoading(false); // Update loading state once data is fetched\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        setLoading(false); // Ensure loading state is updated in case of error\n      }\n    };\n    fetchUsers();\n  }, []); // Empty dependency array to run effect only once\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this); // Render loading message while fetching data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Users List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \" \", user.name, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 49\n        }, this), \" \", user.age, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 83\n        }, this), \" \", user.email]\n      }, user._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UsersList, \"+quVjBMM9THpHvnUcBaphXhhZmo=\");\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UsersList","_s","users","setUsers","loading","setLoading","fetchUsers","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","name","age","email","_id","_c","$RefreshReg$"],"sources":["/Users/sysbr/Desktop/prof/frontend/src/components/UsersList.js"],"sourcesContent":["// src/components/UsersList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UsersList = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/users');\n        setUsers(response.data);\n        setLoading(false); // Update loading state once data is fetched\n      } catch (error) {\n        console.error('Error fetching users:', error);\n        setLoading(false); // Ensure loading state is updated in case of error\n      }\n    };\n\n    fetchUsers();\n  }, []); // Empty dependency array to run effect only once\n\n  if (loading) {\n    return <p>Loading...</p>; // Render loading message while fetching data\n  }\n\n  return (\n    <div>\n      <h2>Users List</h2>\n      <ul>\n        {users.map(user => (\n          <li key={user._id}>\n            <strong>Name:</strong> {user.name}, <strong>Age:</strong> {user.age}, <strong>Email:</strong> {user.email}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UsersList;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,iCAAiC,CAAC;QACnEL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;QACvBJ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CL,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIF,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC5B;EAEA,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACe,GAAG,CAACC,IAAI,iBACbnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACC,IAAI,EAAC,IAAE,eAAApB,OAAA;UAAAa,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACE,GAAG,EAAC,IAAE,eAAArB,OAAA;UAAAa,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACG,KAAK;MAAA,GADlGH,IAAI,CAACI,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}